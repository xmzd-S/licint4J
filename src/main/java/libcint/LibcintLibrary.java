package libcint;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Structure;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import libcint.CINTOpt.ByReference;
/**
 * JNA Wrapper for library <b>libcint</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface LibcintLibrary extends Library {
	 String JNA_LIBRARY_NAME = "libcint";
	 NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(LibcintLibrary.JNA_LIBRARY_NAME);
	 LibcintLibrary INSTANCE = (LibcintLibrary)Native.loadLibrary(LibcintLibrary.JNA_LIBRARY_NAME, LibcintLibrary.class);
	/**
	 * define<br>
	 * Conversion Error : 5.4.<br>
	 * SKIPPED:<br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:0</i><br>
	 * 5.4.
	 */
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_EXPCUTOFF = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_COMMON_ORIG = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_RINV_ORIG = (int)4;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_RINV_ZETA = (int)7;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_RANGE_OMEGA = (int)8;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_F12_ZETA = (int)9;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_GTG_ZETA = (int)10;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int NGRIDS = (int)11;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_GRIDS = (int)12;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_ENV_START = (int)20;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int CHARGE_OF = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_COORD = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int NUC_MOD_OF = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_ZETA = (int)3;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int PTR_FRAC_CHARGE = (int)4;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 final int RESERVE_ATMSLOT = (int)5;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 final int ATM_SLOTS = (int)6;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int ATOM_OF = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int ANG_OF = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int NPRIM_OF = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	 int NCTR_OF = (int)3;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int KAPPA_OF = (int)4;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int PTR_EXP = (int)5;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int PTR_COEFF = (int)6;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int RESERVE_BASLOT = (int)7;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int BAS_SLOTS = (int)8;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSX = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSY = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSZ = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POS1 = (int)3;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSXX = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSYX = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSZX = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POS1X = (int)3;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSXY = (int)4;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSYY = (int)5;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSZY = (int)6;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POS1Y = (int)7;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSXZ = (int)8;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSYZ = (int)9;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSZZ = (int)10;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POS1Z = (int)11;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSX1 = (int)12;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSY1 = (int)13;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POSZ1 = (int)14;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POS11 = (int)15;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRX = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRY = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRZ = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRXX = (int)0;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRXY = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRXZ = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRYX = (int)3;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRYY = (int)4;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRYZ = (int)5;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRZX = (int)6;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRZY = (int)7;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int TSRZZ = (int)8;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int MXRYSROOTS = (int)32;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int ANG_MAX = (int)15;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int LMAX1 = (int)16;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int CART_MAX = (int)136;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int SHLS_MAX = (int)1048576;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int NPRIM_MAX = (int)64;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int NCTR_MAX = (int)64;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int POINT_NUC = (int)1;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int GAUSSIAN_NUC = (int)2;
	/** <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h</i> */
	  int FRAC_CHARGE_NUC = (int)3;
	/**
	 * Original signature : <code>int CINTlen_cart(const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:102</i>
	 */
	int CINTlen_cart(int l);
	/**
	 * Original signature : <code>int CINTlen_spinor(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:104</i>
	 */
	int CINTlen_spinor(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTcgtos_cart(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:106</i>
	 */
	int CINTcgtos_cart(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTcgtos_spheric(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:108</i>
	 */
	int CINTcgtos_spheric(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTcgtos_spinor(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:110</i>
	 */
	int CINTcgtos_spinor(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTcgto_cart(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:112</i>
	 */
	int CINTcgto_cart(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTcgto_spheric(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:114</i>
	 */
	int CINTcgto_spheric(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTcgto_spinor(const int, const int*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:116</i>
	 */
	int CINTcgto_spinor(int bas_id, int bas[]);
	/**
	 * Original signature : <code>int CINTtot_pgto_spheric(const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:118</i>
	 */
	int CINTtot_pgto_spheric(int bas[], int nbas);
	/**
	 * Original signature : <code>int CINTtot_pgto_spinor(const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:120</i>
	 */
	int CINTtot_pgto_spinor(int bas[], int nbas);
	/**
	 * Original signature : <code>int CINTtot_cgto_cart(const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:122</i>
	 */
	int CINTtot_cgto_cart(int bas[], int nbas);
	/**
	 * Original signature : <code>int CINTtot_cgto_spheric(const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:124</i>
	 */
	int CINTtot_cgto_spheric(int bas[], int nbas);
	/**
	 * Original signature : <code>int CINTtot_cgto_spinor(const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:126</i>
	 */
	int CINTtot_cgto_spinor(int bas[], int nbas);
	/**
	 * Original signature : <code>void CINTshells_cart_offset(int[], const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:128</i>
	 */
	void CINTshells_cart_offset(IntBuffer ao_loc, int bas[], int nbas);
	/**
	 * Original signature : <code>void CINTshells_spheric_offset(int[], const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:130</i>
	 */
	void CINTshells_spheric_offset(IntBuffer ao_loc, int bas[], int nbas);
	/**
	 * Original signature : <code>void CINTshells_spinor_offset(int[], const int*, const int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:132</i>
	 */
	void CINTshells_spinor_offset(IntBuffer ao_loc, int bas[], int nbas);
	/**
	 * Original signature : <code>double* CINTc2s_bra_sph(double*, int, double*, int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:134</i>
	 */
	DoubleByReference CINTc2s_bra_sph(DoubleBuffer sph, int nket, DoubleBuffer cart, int l);
	/**
	 * Original signature : <code>double* CINTc2s_ket_sph(double*, int, double*, int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:136</i>
	 */
	DoubleByReference CINTc2s_ket_sph(DoubleBuffer sph, int nket, DoubleBuffer cart, int l);
	/**
	 * Original signature : <code>double* CINTc2s_ket_sph1(double*, double*, int, int, int)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:138</i>
	 */
	DoubleByReference CINTc2s_ket_sph1(DoubleBuffer sph, DoubleBuffer cart, int lds, int ldc, int l);
	/**
	 * Original signature : <code>double CINTgto_norm(int, double)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:140</i>
	 */
	double CINTgto_norm(int n, double a);
	/**
	 * Original signature : <code>void CINTinit_2e_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:142</i>
	 */
	void CINTinit_2e_optimizer(ByReference opt[], IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env);
	/**
	 * Original signature : <code>void CINTinit_2e_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:142</i>
	 */
	void CINTinit_2e_optimizer(ByReference opt[], IntByReference atm, int natm, IntByReference bas, int nbas, DoubleByReference env);
	/**
	 * Original signature : <code>void CINTinit_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:144</i>
	 */
	void CINTinit_optimizer(ByReference opt[], IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env);
	/**
	 * Original signature : <code>void CINTinit_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:144</i>
	 */
	void CINTinit_optimizer(ByReference opt[], IntByReference atm, int natm, IntByReference bas, int nbas, DoubleByReference env);
	/**
	 * Original signature : <code>void CINTdel_2e_optimizer(CINTOpt**)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:146</i>
	 */
	void CINTdel_2e_optimizer(ByReference opt[]);
	/**
	 * Original signature : <code>void CINTdel_optimizer(CINTOpt**)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:148</i>
	 */
	void CINTdel_optimizer(ByReference opt[]);
	/**
	 * Original signature : <code>int cint2e_cart(double*, int*, int*, int, int*, int, double*, CINTOpt*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:150</i>
	 */
	int cint2e_cart(DoubleBuffer opijkl, IntBuffer shls, IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env, CINTOpt opt);
	/**
	 * Original signature : <code>void cint2e_cart_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:152</i>
	 */
	void cint2e_cart_optimizer(ByReference opt[], IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env);
	/**
	 * Original signature : <code>void cint2e_cart_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:152</i>
	 */
	void cint2e_cart_optimizer(ByReference opt[], IntByReference atm, int natm, IntByReference bas, int nbas, DoubleByReference env);
	/**
	 * Original signature : <code>int cint2e_sph(double*, int*, int*, int, int*, int, double*, CINTOpt*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:154</i>
	 */
	int cint2e_sph(DoubleBuffer opijkl, IntBuffer shls, IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env, CINTOpt opt);
	/**
	 * Original signature : <code>void cint2e_sph_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:156</i>
	 */
	void cint2e_sph_optimizer(ByReference opt[], IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env);
	/**
	 * Original signature : <code>void cint2e_sph_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:156</i>
	 */
	void cint2e_sph_optimizer(ByReference opt[], IntByReference atm, int natm, IntByReference bas, int nbas, DoubleByReference env);
	/**
	 * Original signature : <code>int cint2e(double*, int*, int*, int, int*, int, double*, CINTOpt*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:158</i>
	 */
	int cint2e(DoubleBuffer opijkl, IntBuffer shls, IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env, CINTOpt opt);
	/**
	 * Original signature : <code>void cint2e_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:160</i>
	 */
	void cint2e_optimizer(ByReference opt[], IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env);
	/**
	 * Original signature : <code>void cint2e_optimizer(CINTOpt**, int*, int, int*, int, double*)</code><br>
	 * <i>native declaration : C:\Users\10453\Desktop\notebook\libcint\cmake-build-debug\include\cint.h:160</i>
	 */
	void cint2e_optimizer(ByReference opt[], IntByReference atm, int natm, IntByReference bas, int nbas, DoubleByReference env);

	int cint1e_ipnuc_cart(DoubleBuffer buf, IntBuffer shls, IntBuffer atm, int natm, IntBuffer bas, int nbas, DoubleBuffer env);

}
